----PERFORMADO E NAO PERFORMADO
WITH 
PER AS(
SELECT
CASE WHEN sum(ITE.QTDNEG-ITE.QTDENTREGUE) = 0 THEN 'Performado' ELSE 'N達o Performado' END status,
CASE WHEN FIN.AD_TIPOCOBRANCA IS NULL THEN 'Vazio' ELSE FIN.AD_TIPOCOBRANCA END AD_TIPOCOBRANCA,
CAB.NUNOTA,
cab.NUMNOTA,
sum(ITE.QTDNEG)QTDNEG,
sum(ITE.QTDENTREGUE)QTDENTREGUE,
sum(ITE.QTDNEG-ITE.QTDENTREGUE) QTDPENDENTE,
sum(fin.VLRDESDOB)VLRDESDOB,
SUM(((nvl(FIN.VLRDESDOB,0) + (CASE WHEN FIN.TIPMULTA = '1' THEN nvl(FIN.VLRMULTA,0) ELSE 0 END) 
	+ (CASE WHEN FIN.TIPJURO = '1' THEN nvl(FIN.VLRJURO,0) ELSE 0 END) + nvl(FIN.DESPCART,0) 
	+ nvl(FIN.VLRVENDOR,0) - nvl(FIN.VLRDESC,0) 
	- (CASE WHEN FIN.IRFRETIDO = 'S' THEN nvl(FIN.VLRIRF,0) ELSE 0 END) 
	- (CASE WHEN FIN.ISSRETIDO = 'S' THEN nvl(FIN.VLRISS,0) ELSE 0 END) 
	- (CASE WHEN FIN.INSSRETIDO = 'S' THEN nvl(FIN.VLRINSS,0) ELSE 0 END) 
	- nvl(FIN.CARTAODESC,0) 
	+ nvl((SELECT ROUND(SUM(I.VALOR * I.TIPIMP),2) FROM TGFIMF I WHERE I.NUFIN = FIN.NUFIN),0) 
	+ nvl(FIN.VLRMULTANEGOC,0) + nvl(FIN.VLRJURONEGOC,0) 
	- nvl(FIN.VLRMULTALIB,0) - nvl(FIN.VLRJUROLIB,0) 
	+ nvl(FIN.VLRVARCAMBIAL,0)) * nvl(FIN.RECDESP,0))*-1)*-1VLRLIQ
FROM TGFCAB CAB
INNER JOIN TGFITE ITE ON CAB.NUNOTA = ITE.NUNOTA
left JOIN TGFFIN FIN ON CAB.NUNOTA = FIN.NUNOTA
WHERE CAB.CODTIPOPER = 1111 AND FIN.DHBAIXA IS NULL
GROUP BY CAB.NUNOTA,cab.NUMNOTA,FIN.AD_TIPOCOBRANCA
ORDER BY 1),
PER1 AS (SELECT 
1 ID,
sum(CASE WHEN per.status = 'Performado' AND per.ad_tipocobranca = 'Vazio' THEN VLRLIQ END) Performado,
sum(CASE WHEN per.status = 'N達o Performado' AND per.ad_tipocobranca = 'Vazio' THEN VLRLIQ END) Nao_Performado,
sum(CASE WHEN per.status = 'Performado' AND per.ad_tipocobranca = 'Vazio' THEN VLRLIQ END) +
sum(CASE WHEN per.status = 'N達o Performado' AND per.ad_tipocobranca = 'Vazio' THEN VLRLIQ END) Total
FROM PER 
WHERE  status in ('N達o Performado', 'Performado') AND ad_tipocobranca = 'Vazio'),


---DETALHAMENTO DO PRODUTO COM AGRUPAMENTO DE MATERIA PRIMA
------------------------------------------------------------------------
--WITH
DTPREV AS (select DISTINCT CAB.NUNOTA, CAB.DTNEG,
case when min(dtp.dtprev) is null then cab.dtneg else min(dtp.dtprev) end dtprev
from tgfDTP DTP
LEFT JOIN TGFCAB CAB ON DTP.NUNOTA = CAB.NUNOTA
GROUP BY CAB.NUNOTA, CAB.DTNEG ORDER BY 3),
PC_ANDA AS (SELECT DISTINCT ITE.CODPROD,PRO.DESCRPROD,SUM((ITE.QTDNEG-ITE.QTDENTREGUE))QTD_PC_ANDA FROM TGFCAB CAB
INNER JOIN TGFITE ITE ON CAB.NUNOTA = ITE.NUNOTA
INNER JOIN TGFPRO PRO ON ITE.CODPROD = PRO.CODPROD
WHERE CAB.PENDENTE ='S' AND CAB.CODTIPOPER =107 GROUP BY ITE.CODPROD,PRO.DESCRPROD),
ITE AS (SELECT * FROM TGFITE ITE),
EST AS (SELECT EST.CODPROD,SUM(EST.ESTOQUE)ESTOQUE FROM TGFEST EST GROUP BY EST.CODPROD),
EST1 AS (SELECT EST.CODPROD,SUM(EST.ESTOQUE)ESTOQUE FROM TGFEST EST GROUP BY EST.CODPROD),
APROD AS (SELECT DISTINCT ite.codprod, pro.DESCRPROD,
(CASE
WHEN (((CASE WHEN EST1.ESTOQUE IS NULL THEN 0 ELSE EST1.ESTOQUE END)-SUM(ITE.QTDNEG-ITE.QTDENTREGUE)))<=0 THEN (((CASE WHEN EST1.ESTOQUE IS NULL THEN 0 ELSE EST1.ESTOQUE END)-SUM(ITE.QTDNEG-ITE.QTDENTREGUE))) ELSE 0 END) A_NECESSARIA
FROM TGFCAB CAB
INNER JOIN tgfpar par ON cab.CODPARC = par.CODPARC 
INNER JOIN tgfite ite ON cab.nunota = ite.nunota
INNER JOIN tgfpro pro ON ite.codprod = pro.codprod
inner join tgfgru gru on pro.codgrupoprod = gru.codgrupoprod
LEFT JOIN EST1 ON ITE.CODPROD = EST1.CODPROD
Inner join dtprev on cab.AD_NUNOTAPED = dtprev.nunota
INNER JOIN TGFVEN ven ON cab.codvend = ven.CODVEND
WHERE 
  cab.codemp = 60
AND CAB.CODTIPOPER IN (1000,1003,1013,1111,1005)
AND CAB.PENDENTE = 'S'
AND CAB.STATUSNOTA = 'L' --SIGNIFICA CONFIRMADA = SIM
GROUP BY
ite.codprod,
pro.DESCRPROD,
(CASE WHEN EST1.ESTOQUE IS NULL THEN 0 ELSE EST1.ESTOQUE END)
ORDER BY 1),
ICP AS (select codprod,codmatprima,qtdmistura,VARIACAO from tgficp icp WHERE ICP.variacao = (SELECT MAX(ICP2.variacao) FROM tgficp ICP2 WHERE ICP.codprod = ICP2.codprod)),
PRO3 AS (SELECT * FROM TGFPRO),
CUS AS (SELECT CODEMP, CODPROD, DTATUAL, CUSSEMICM FROM (SELECT CODEMP, CODPROD, DTATUAL, CUSSEMICM,
      ROW_NUMBER() OVER (PARTITION BY CODPROD ORDER BY DTATUAL DESC) AS rn
      FROM TGFCUS) ranked
WHERE rn = 1 ORDER BY CODPROD),
MP1 AS (
SELECT 
icp.codmatprima,PRO3.DESCRPROD,CUS.CUSSEMICM,SUM(icp.qtdmistura*APROD.A_NECESSARIA) A_NECESSARIA1, 
case when EST.ESTOQUE is null then 0 else EST.ESTOQUE end estoque,
case when (SUM(icp.qtdmistura*APROD.A_NECESSARIA) + EST.ESTOQUE) > 0 then (SUM(icp.qtdmistura*APROD.A_NECESSARIA) + EST.ESTOQUE) else 0 end saldo,
case when (SUM(icp.qtdmistura*APROD.A_NECESSARIA) + EST.ESTOQUE) <= 0 then (SUM(icp.qtdmistura*APROD.A_NECESSARIA) + EST.ESTOQUE) else 0 end falta,
case when PC_ANDA.QTD_PC_ANDA is null then 0 else PC_ANDA.QTD_PC_ANDA end QTD_PC_ANDA
FROM ICP
INNER JOIN APROD ON ICP.CODPROD = APROD.codprod
LEFT JOIN EST ON ICP.codmatprima = EST.CODPROD
left join PC_ANDA on ICP.codmatprima = PC_ANDA.CODPROD
inner join PRO3 ON ICP.codmatprima = PRO3.CODPROD
INNER JOIN CUS ON ICP.CODMATPRIMA = CUS.CODPROD
GROUP BY
icp.codmatprima,PRO3.DESCRPROD,CUS.CUSSEMICM,EST.ESTOQUE,PC_ANDA.QTD_PC_ANDA
ORDER BY 1),
MP2 AS (SELECT 1 ID,SUM(falta*CUSSEMICM)*-1 COMPRAR FROM MP1),

----------- ENDIVIDAMENTO
ENDI AS (SELECT 
	1 ID,
    SUM(((nvl(FIN.VLRDESDOB,0) + (CASE WHEN FIN.TIPMULTA = '1' THEN nvl(FIN.VLRMULTA,0) ELSE 0 END) 
	+ (CASE WHEN FIN.TIPJURO = '1' THEN nvl(FIN.VLRJURO,0) ELSE 0 END) + nvl(FIN.DESPCART,0) 
	+ nvl(FIN.VLRVENDOR,0) - nvl(FIN.VLRDESC,0) 
	- (CASE WHEN FIN.IRFRETIDO = 'S' THEN nvl(FIN.VLRIRF,0) ELSE 0 END) 
	- (CASE WHEN FIN.ISSRETIDO = 'S' THEN nvl(FIN.VLRISS,0) ELSE 0 END) 
	- (CASE WHEN FIN.INSSRETIDO = 'S' THEN nvl(FIN.VLRINSS,0) ELSE 0 END) 
	- nvl(FIN.CARTAODESC,0) 
	+ nvl((SELECT ROUND(SUM(I.VALOR * I.TIPIMP),2) FROM TGFIMF I WHERE I.NUFIN = FIN.NUFIN),0) 
	+ nvl(FIN.VLRMULTANEGOC,0) + nvl(FIN.VLRJURONEGOC,0) 
	- nvl(FIN.VLRMULTALIB,0) - nvl(FIN.VLRJUROLIB,0) 
	+ nvl(FIN.VLRVARCAMBIAL,0)) * nvl(FIN.RECDESP,0))*-1)ENDIVIDAMENTO
FROM tgffin fin
INNER JOIN tgfnat nat ON fin.codnat = nat.codnat
INNER JOIN tgfpar par ON fin.codparc = par.codparc
WHERE 
    fin.CODNAT IN (3070100, 3070200, 3070300, 3070400, 3070500, 3070600)
    AND fin.DHBAIXA IS NULL
    AND FIN.CODEMP = 60),
    
------- CUSTO FIXO:::
CF AS (SELECT DISTINCT
1 ID,
TO_CHAR(LAN.DTMOV,'YYYY') ANO, TO_CHAR(LAN.DTMOV,'MM') MES, TO_CHAR(LAN.DTMOV,'MM-YYYY') EXERCICIO,
(((LAG(
SUM(CASE 
WHEN (PLA.CODCTACTB NOT IN (458, 508, 714, 522, 534, 536, 537, 539, 541, 544, 545, 546, 551,599, 601, 603, 715, 716, 718, 721,757,758,759,811,812))
AND LAN.TIPLANC='R' THEN 1*LAN.VLRLANC
WHEN (PLA.CODCTACTB NOT IN (458, 508, 714, 522, 534, 536, 537, 539, 541, 544, 545, 546, 551,599, 601, 603, 715, 716, 718, 721,757,758,759,811,812))
AND LAN.TIPLANC='D' THEN -1*LAN.VLRLANC 
END),1) OVER (ORDER BY TO_CHAR(LAN.DTMOV,'YYYY') ASC, TO_CHAR(LAN.DTMOV,'MM') ASC)*-1)+
(LAG(
SUM(CASE 
WHEN (PLA.CODCTACTB NOT IN (458, 508, 714, 522, 534, 536, 537, 539, 541, 544, 545, 546, 551,599, 601, 603, 715, 716, 718, 721,757,758,759,811,812))
AND LAN.TIPLANC='R' THEN 1*LAN.VLRLANC
WHEN (PLA.CODCTACTB NOT IN (458, 508, 714, 522, 534, 536, 537, 539, 541, 544, 545, 546, 551,599, 601, 603, 715, 716, 718, 721,757,758,759,811,812))
AND LAN.TIPLANC='D' THEN -1*LAN.VLRLANC 
END),2) OVER (ORDER BY TO_CHAR(LAN.DTMOV,'YYYY') ASC, TO_CHAR(LAN.DTMOV,'MM') ASC)*-1)+
(LAG(
SUM(CASE 
WHEN (PLA.CODCTACTB NOT IN (458, 508, 714, 522, 534, 536, 537, 539, 541, 544, 545, 546, 551,599, 601, 603, 715, 716, 718, 721,757,758,759,811,812))
AND LAN.TIPLANC='R' THEN 1*LAN.VLRLANC
WHEN (PLA.CODCTACTB NOT IN (458, 508, 714, 522, 534, 536, 537, 539, 541, 544, 545, 546, 551,599, 601, 603, 715, 716, 718, 721,757,758,759,811,812))
AND LAN.TIPLANC='D' THEN -1*LAN.VLRLANC 
END),3) OVER (ORDER BY TO_CHAR(LAN.DTMOV,'YYYY') ASC, TO_CHAR(LAN.DTMOV,'MM') ASC)*-1))/3) CUSTOMED
FROM TCBLAN LAN
INNER JOIN TCBPLA PLA ON LAN.CODCTACTB = PLA.CODCTACTB
WHERE 
LPAD(PLA.CTACTB,1) IN (3,5)
AND PLA.ANALITICA = 'S'
AND LAN.CODEMP = 60
GROUP BY
TO_CHAR(LAN.DTMOV,'YYYY'),
TO_CHAR(LAN.DTMOV,'MM'),
TO_CHAR(LAN.DTMOV,'MM-YYYY')
ORDER BY
2 DESC,3 DESC
FETCH FIRST 1 ROWS ONLY)
SELECT 
PER1.Performado,
PER1.Nao_Performado,
PER1.Total,
MP2.COMPRAR,
ENDI.ENDIVIDAMENTO,
CF.CUSTOMED,
PER1.Total-MP2.COMPRAR-ENDI.ENDIVIDAMENTO-CF.CUSTOMED SALDO_FINAL
FROM CF
INNER JOIN PER1 ON CF.ID = PER1.ID
INNER JOIN MP2 ON CF.ID = MP2.ID
INNER JOIN ENDI ON CF.ID = ENDI.ID